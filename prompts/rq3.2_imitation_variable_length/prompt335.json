{
  "system": "You are a helpful writing assistant. Your task is to paraphrase text while preserving its meaning. Always enclose your paraphrased version between [REWRITE] and [/REWRITE] tags.",
  "user": "Here is an example of the writing style you are expected to mimic:\n\n   As I mentioned in my earlier blog about my preparation on an article in Cryptography and .Net, I finished compiling the article and contributed to MSDN INDIA 2 weeks before. Now my new article  urlLink   Secret-Key Encryption Cryptography in Microsoft .NET    is published. I have also provided a sample code on using Secret-key encryption. You need to have a passport (hotmail or msn ID) to view the article.  When I was preparing the article on Cryptography and Microsoft .Net, I found there are so many topics to be covered under this title. Including all these topics in one will make the single article a lengthy document to present in MSDN and it wont be good enough to read. So I thought of splitting the whole title on Cryptography into different sections like Private (Secret) Key Encryption, Public Key encryption, Cryptograhic Signing, Hashes, Digital Signature Algorithm (DSA) etc.   Hope I can able to complete the topics on these titles very soon and contribute the same to MSDN INDIA. These topics would be very interesting and important to learn as well.     Sometimes I used to think like whether I did a mistake of choosing software carrier?!!. This is because all software majors especially Microsoft releasing new technology, new languages, updated versions etc day by day. This makes all software programmers and developers to keep on learning the latest stuff, sometimes I feel its a pain in butt.:-) But on other side learning the latest keeps us brightest and best.  Ok..Coming to my today's blog..Microsoft has released new code names for the latest updates for its existing technologies. Introducing the new releases/updates to its great developers, Microsoft used to present them with jazzy code names..For e.g. SharePoint Portal Server was introduced with a code name as 'TAHOE' (I remember the project GILS I did along with my mentor suman using SPS, those are gr8 days) and present My Services was introduced as 'HAILSTORM' (I remember by then colleague swami who initiated a project on HailStorm, good stuff).  I just happen to know about the latest code names from Microsoft for its next release of software components and those are as follows:   Longhorn  - This is the next release of Microsoft Windows Operating System.It is the first operating system built with managed code and the first to host a new storage sub-system (code named 'WinFS') that revolutionizes the concept of a file system. The pages for Longhorn are written in a new declarative markup language, code-named (so many new stuff, lots to learn, right:) 'XAML' (Extensible Application Markup Language). Each and every XAML tag corresponds to a .NET Framework class and comes with a collection of methods, properties and events. Longhorn represents a landmark in the history of Windows Operating System.    urlLink Explore Longhorn     Indigo  - The upcoming version Longhorn will include a unified programming model and communications infrastructure for developing connected systems. This infrastructure is code named 'Indigo'. One of the key benefits of Indigo is it provides a unified programming model and protocol stack for all common language runtime (the great CLR)-based remoting technologies. Indigo is the next step in evolutionary path that started with COM, COM+ and MSMQ.    urlLink More on Indigo     Avalon  - This is an integral part of Longhorn, consists mostly of a new collection of classes added to the .NET Framework. The most important new namespace for Avalon programming currently have names like MSAvalon.Windows, MSAvalon.Windows.Controls and MSAvalon.Windows.Media (These might change before long horn reaches final release). We can mention this as a presentation subsystem in the next version of Windows.   Learn more about Avalon  urlLink here     Last but not the least    WinFS  - This is a revolutionary File Storage System that lets users search and manage files based on content. As mentioned in Longhorn para earlier, this comes with the next version of Windows allows users to perform search based on metadata irrespective of type of file or creator of the file. This is going to be the basic building block for all applications on Longhorn. One small feature of WinFS, When you copy a Word document to your My Documents folder or some where in the work station which is running WinFS, information about the file will be put into the WinFS store so that applications can perform searches based on the files properties. We can say that WinFS is an advanced version of Share Point Portal Server with respect to document searching.   Check out more on WinFS  urlLink here       More here too  urlLink WinFS   But there is still some thing named as YUKON and WHIDBEY..I did not get a chance to read on these..Will write more on this sometime later..Lots of stuff to learn..hah!!       In the programming world (as I am a programmer developer), new technologies are brought to our attention almost every day (especially from Microsoft). Every now and then, however, a new technology comes along that generates enough excitement in the development community that we spend our days and night mastering it. It takes a special technology to inspire this kind of commintment and for many in the development community, .NET is one of those technologies.  Community is a force in itself. Community just happens. By Community I mean here is a User Group. Almost from the moment .NET was introduced at the Professional Developer's Conference (PDC) 2000, .NET user group started popping up all over the world. Myself and my project team started working on .NET PDC version and developed many applications by then. Microsoft didn't go out and started these groups-they just happened. .NET is one of those rare technologies that has everyone motivated. These user group make their group members to share their .NET Experience with other peers. The success of the community replicated all across INDIA and around the world. Today there are user groups in almost every major cities from Chennai to Bangalore to Kolkatta to Cochin.  In the end, community does what community has always done: It captures your excitement and spreads it to others. Its a wonderful experience.  I want to mention here about activities I am involved in .Net User Groups, I am one of the Managers of  urlLink .Net Bloomington User Group (we call it as .Net-BUG!!)  Also, I am an active member of the following .Net user groups:   urlLink .Net User Group Chennai   urlLink .Net User Group Bangalore   urlLink .Net User Group Hyderabad   urlLink .Net User Group Ahmedabad   urlLink .Net User Group Mumbai   urlLink .Net User Group Indore   I invite all my friends, .NET enthusiasts to join their local user group and feel the excitement and learn by experience.      The .NET Framework 2.0 introduces enhancements across the .NET Framework. Windows client application development will be simplified through new controls and designer features, while the introduction of 'ClickOnce' technology will dramatically ease Windows client application deployment. ASP.NET 2.0 introduces a collection of new features that refine Web application development and radically reduce coding effort. Other enhancements include more productive ADO.NET data access, support for the latest Web services standards, and expanded functionality for device-based development.   Common Language Runtime 2.0    Generics . Generics are classes and methods that work uniformly on values of different types and can greatly improve developer productivity by boosting code reuse.   Edit and Continue . The feature that made Visual Basic “RAD” is now in the core CLR, enabling developers to halt program execution, change a line of code, and continue running it without a full recompilation.   Performance and Load Time . The CLR now loads more quickly and takes up less memory footprint.    Windows Forms 2.0    Application Deployment . Windows Forms 2.0 introduces “ClickOnce,” which makes it simple for developers to package and deploy applications and simplifies the inclusion of pre-requisites in the installation package. ClickOnce further provides a simple way for administrators and users to deploy and update applications.   Visually Stunning Presentation . Windows Forms 2.0 brings together the capability to build applications that look like Microsoft Office and increases flexibility and control over how you can position controls on the forms. It includes a new grid control, a Sound Player control, a Web Browser control and an Active Document Host control. Beyond that, in order to make your application look more like Microsoft Windows or Office, we have made Windows Forms controls render with visual styles by default, and we have created a new menu, toolbar, and status bar family of controls called ToolStrips.    ASP.NET 2.0    Productivity and Customizability . ASP.NET 2.0 includes support for membership (user name/password credential storage) and role management services. The personalization service enables quick storage/retrieval of user settings and preferences, facilitating rich customization with minimal code. Master Pages now enable flexible page UI inheritance across sites. Augmenting all these infrastructure features are more than 45 new server controls in ASP.NET 2.0 that enable powerful declarative support for data access, login security, wizard navigation, image generation, menus, treeviews, portals, and more.    UI Adaptability . All standard ASP.NET 2.0 controls are now built with a rich UI adapter extensibility architecture that enables customization of output for different browsers and devices. All built-in ASP.NET controls with the   prefix are now mobile enabled in Whidbey, which allows developers to automatically target more than 300+ unique devices that support a variety of different markup standards (WAP/WML, XHTML Mobile, cHTML, etc).    Administration and Management . ASP.NET 2.0 includes configuration management APIs, enabling developers to create, read, and update Web.config and machine.config configuration files and an admin tool that plugs into the existing IIS Administration MMC, enabling an administrator to graphically read or change any setting within our XML configuration files. It also includes a new application deployment utility that will enable both developers and administrators to precompile a dynamic ASP.NET application prior to deployment protecting your source code. Finally, ASP.NET 2.0 provides health-monitoring and tracing support to enable administrators to be automatically notified when an application on a server starts to experience problems.    Speed and Performance . ASP.NET 2.0 is 64-bit enabled so it can take advantage of the full memory address space of new 64-bit processors and servers. ASP.NET 2.0 also includes automatic database server cache invalidation enabling developers to cache database-driven pages and partial page content and have ASP.NET automatically invalidate these cache entries and refresh the content whenever the back-end database changes.       One of my friend, who is a VB guy basically recently started learning VB.Net. Yesterday he called me and mentioned that he was getting 'Sub Main Was Not Found in WindowsApplication1.Form1' error message while running his first VB.Net application. He just created a Windows application with one form on it and tried to run the form. That's it, he encountered this problem. He was using Visual Studio .Net 2002 edition.   After getting the details of what he did with his new Project, I gave him the below explanation and solution:  The cause for this problem must make the core VB guys to feel wired. This problem would occur If the  Name  property of the start up form changed. This is not the case in Visual Basic 6.0 or earlier. In those versions even if you change the start up form name (first form by default is the start up form) the application would run without any errors. But VB.Net which is more sensitive and powerful, needs everything to be proper. So in order to avoid the above mentioned error, before running the application make sure that the  Startup Object  property for the project is updated with the correct form name.  To accomplish that follow these steps:  - Right-click the Startup project in Solution Explorer. - Click Properties when you receive the context menu. - The Property Pages dialog box appears. - Click the General node in the Common Properties node, if it is not already selected. - Click the Startup Object drop-down list box. - Select the new name for the Startup Object drop-down list box. - Click OK.  Listen: You can also open the Property Pages dialog box by clicking  Properties  on the Project menu, or by pressing the  Shift+F4  keys. For this to work, the Startup project should be selected in the Solution Explorer.   Actually this is a bug confirmed by Microsoft and hope this will be fixed in later versions of Visual Studio .Net.  After resolving the problem, he successfully able to run the application and started developing a dummy project while learning VB.Net.  Hope he had a nice sleep with sweet dreams on .NET !!! \n\nPlease rewrite the following text to match this writing style while maintaining its core meaning.\n\nText to be modified:\n\n{{text}}\n\nProvide your rewrite between [REWRITE] and [/REWRITE] tags.",
  "metadata": {
    "author_id": "3344700",
    "word_count": 2324,
    "prompt_index": 335,
    "target_length": 2172
  }
}